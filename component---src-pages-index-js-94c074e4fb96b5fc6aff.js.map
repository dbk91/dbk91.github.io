{"version":3,"sources":["webpack:///./src/components/Profile.jsx","webpack:///./src/components/About.jsx","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Profile","react_default","a","createElement","className","src","alt","href","About","IndexPage","layout","seo","title","keywords","components_Profile","components_About","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","library","add","faGithub","faLinkedinIn","Layout","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","target","rel","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","size","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-94c074e4fb96b5fc6aff.js","sourcesContent":["import React from 'react'\n\nimport './profile.css'\n\nconst Profile = () => {\n  return (\n    <div className=\"profile\">\n      <img className=\"avatar\" src=\"https://avatars0.githubusercontent.com/u/7128101?s=460&v=4\" alt=\"Dan Kelly\" />\n      <h3 className=\"name-title\">Dan Kelly</h3>\n      <nav className=\"navigation\">\n        <a href=\"/#/about\">About</a>\n        <a href=\"https://blog.dankelly.me\">Blog</a>\n      </nav>\n    </div>\n  );\n};\n\nexport default Profile\n","import React from 'react'\n\nimport './about.css';\n\nconst About = () => {\n  return (\n    <p className=\"about\">Full-stack web developer. Interested in all things tech. Always looking to build new things.</p>\n  )\n}\n\nexport default About\n","import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Profile from '../components/Profile'\nimport About from '../components/About'\nimport './index.css'\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <div className=\"main-content\">\n      <Profile />\n      <About />\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\n\nimport './layout.css'\n\nlibrary.add(faGithub, faLinkedinIn)\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div className=\"layout-container\">{children}</div>\n        <footer className=\"main-footer\">\n          <a\n            href=\"https://github.com/dbk91\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"link-icon\"\n          >\n            <FontAwesomeIcon icon={['fab', 'github']} size=\"2x\" />\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/daniel-kelly-4191a972/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"link-icon\"\n          >\n            <FontAwesomeIcon icon={['fab', 'linkedin-in']} size=\"2x\" />\n          </a>\n        </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}